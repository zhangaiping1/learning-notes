2、工具、面板、视图

工作区是可以存储的，这个不错。

3、测量、取色

按住shift键是加选，按住alt键是减选。

左边拉个小框，右边拉个小框，显示的宽度就是左右的总宽度。

4、切图

修饰性的图片用background。  内容性的图片用img标签。

修饰性的图片存为png， 内容性的图片存为jpg。

切图标，可以先框一个大概范围，然后用魔棒减选。

切片工具适合于可以一刀切的活动页。

5、保存

6.修改、维护

7、图片的优化与合并

图片路径格式：background:url(images/btn.jpg) no-repeat 0 0;

因为引入方便，浏览器有并行文件数等原因，所以才会进行图片的拼合。

压缩图片工具：

无损：minimage       有损：tinypng

图片之间必须保留空隙，防止图标有想要放大的需求。

浏览器兼容方案：

IE6不支持半透明：可以存两份文件，高级的浏览器用PNG24，低级的浏览器用PNG8。

CSS3：高级的浏览器用CSS3，低级的浏览器用切的图片。

优雅降级：比如高级浏览器是圆角，那低级的浏览器就让他是直角。

8、开发、调试工具

调试工具--点击放大镜--点击元素--可以看到该元素的代码。

IE的调试：IE8以上都带有调试工具。IE6则需要安装原生的浏览器并安装调试工具。如果只是想看的话就装个IETester吧。

9、HTML简介

ICO图标是用的LINK引入的。

10、标签

文档章节：body header nav aside article section footer hx

标题：h1~h6 

超链接：a   可以用target来指定打开的位置，可以设置为一个名称，将会在所以名称的iframe标签中打开。

eg:
<a href="xxx" target="inner"></a>
<iframe name="inner"></iframe>

也可以用来创建锚点:
<a href="#pay"></a>
<div id="pay"></div>

强调：em、strong

引用：cite、q

代码：code

格式化：b、i

保留格式：pre

大段引用：blockquote  这个标签里面有cite属性，这个属性可以引用一个地址。

嵌入页面：iframe  <iframe src="http://www.163.com"></iframe>，在嵌入的这个页面进行操作，不会影响当前页面。
例：在当前页面中放入播放器，然后再嵌入一个新的页面，在新的页面操作的同时，播放器并不会停止播放。

嵌入外部资源：object、embed

<object type="application/x-shockwave-flash">
	<param name="movie" value="http://reader.swf">
	<param name="flashvars" value="book.pdf">

</object>


<embed type="application/x-shockwave-flash" src="http://reader.swf" width="640" height="480">

视频、音频：video、audio

<video controls="controls" poster="/img/poster.jpg">
	<source src="movie.mp4" type="video/mp4">
	<source src="movie.webm" type="video/webm">
	<source src="movie.ogg" type="video/ogg">
	<track kind="subtitles" src="video.str" label="English">
	您的浏览器不支持video标签。
</video>

嵌入资源：canvas、svg

canvas是位图，而svg是矢量图。

热点区域：map、area

表格：table
caption(表格标题) thead(表格头部) tbody(表格主体) tfoot(表格底部)
tr(表格的行) th(表头的单元格) td(普通单元格)
可以用colspan属性来进行跨列。可以用rowspan属性来进行跨行。

表单：form
form有两个属性:action(提交到某个位置) method(提交的方式)
表单的分区：fieldset
fieldset内还能用legend设置分区的标题。

表单的内容:input
input有两个重要属性：name(名称) value(值)  这两个是提交到后台的重要数据。

提交与重置：input标签的type类型为submit和reset
如果想更好的语义化，可以用button标签来表示。一样的type类型为submit和reset

提示信息：label  
label的for属性和对应的表单标签的id属性要对应。

默认选中的话，可以加checked属性。

11、实体字符

value属性里面也可以用实体字符。

12、CSS简介

浏览器私有属性：
chrome、safari:-webkit-
firefox:       -moz-
IE:            -ms-
opera:         -o-

eg:
.pic{
	-webkit-transform:rotate(-3deg);
	-moz-transform:rotate(-3deg);
	-ms-transform:rotate(-3deg);
	-o-transform:rotate(-3deg);
	transform:rotate(-3deg);
}

@规则：

@media:响应式
@keyframes:动画
@font-face:外部字体

13、选择器

!important:其它方法都不适用的情况下，才用这种方法来提升权重。

14、文本

字体如果设置的为em或者百分比的话，相比较的元素是父元素。

文字的缩写：font-style font-weight font-size/line-height font-family
eg: font:italic bold 20px/1.5 arial,serif;
font属性里文字大小和字体是两个必填项。

是否透明在color属性里：1表示不透明，0.5表示透明一半。或者直接写成color:transparent，表示全透明。
eg:color:rgba(255,0,0,0.5);

文字对齐：text-align:left|right|center|justify(两端对齐)
两端对齐并不会将字母拉的很开，而是拉开空格。

垂直对齐：vertical-align
vertical-align:baseline|sub|super|top|text-top|middle|bottom|text-bottom|<percentage>|<length>
               基线对齐 下标 上标 顶部 文本顶部 居中  底部    文本底部    百分比(line-height)  数值
当是数值的时候，就是以baseline为起点，向上走设置的数值。
当是百分比的时候，参照物是line-height

首行缩进：text-indent

可以设一个很大的负值，用以隐藏文字，可以做到代码里存在，但是不显示的效果。

是否保留格式：white-space
white-space:normal|nowrap|pre|pre-wrap|pre-line
normal:合并空格，合并换行，自动换行。
nowrap:合并空格，合并换行，强制一行。
pre:保留空格，保留换行，强制一行。
pre-wrap:保留空格，保留换行，自动换行。
pre-line:合并空格，保留换行，自动换行。

长单词换行:word-wrap
word-wrap:normal|break-word
          不换行   换行

任意单词换行：word-break
word-break:normal|keep-all|break-all
           不换行 不换行   任意字母换行

文字阴影：text-shadow
text-shadow:none|[<length>{2,3} && <color>?]#   前两个值是X轴偏移量，Y轴偏移量，第三个值是模糊半径，最后一个值是阴影颜色。
eg:
text-shadow:1px 2px #f00;
text-shadow:1px 2px 3px #f00;

文字划线：text-decoration
text-decoration:none |[underline||overline||line-through]
                不加线  下划线     上划线    中划线

放不下的时候用点点点：text-overflow
text-overflow:clip|ellipsis
              不加  加成点点点
这个属性需要配合着下面两个属性一起使用：
overflow:hidden;
white-space:nowrap;

手形：cursor
cursor:[<url>,]*[auto|default|none|help|pointer|zoom-in|zoom-out|move]
        自定义图片 自动 箭头  消失 问号 手形    放大镜  缩小镜   往两边的箭头
eg:cursor:url(xx.cur),pointer;

强制继承：inherit
如果填写的值是这个，那么该元素将会强制继承父元素的样式。
eg:font-size:inherit;

15、盒模型

width、height:如果设置为百分比，参照元素是父元素。

注意：行内元素是无法设置宽高的。

四个边框可以分别设置。比如边框的样式，可以通过border-style来设置，值可以是1~4个。

圆角边框：border-radius
eg:
border-radius:10px;
border-radius:0px 5px 10px 15px/20px 15px 10px 5px;
border-radius:50%;(这是一个正圆，百分比的参照物是自身的宽高度。)
border-top-left-radius:10px;(这只是设置了一个左上角。)

溢出处理：overflow
overflow:visible|hidden|scroll|auto
         可视    隐藏    滚动  自动（内容少不会显示滚动条，内容多就会显示滚动条）
引申：单独设置水平方向超出或者垂直方向超出怎么办(overflow-x,overflow-y)

让width和height设置的是盒模型的边框大小：box-sizing(常用于响应式)
box-sizing:content-box|border-box|inherit
eg:
width:150px;
height:150px;
padding:50px;
border:5px solid blue;
box-sizing:border-box;

盒阴影：box-shadow
box-shadow:none|<shadow>[,<shadow>]*
<shadow>:inset?&&<length>{2,4}&&<color>?
eg:
box-shadow:4px 6px 3px 3px red;
           水平偏移 垂直偏移 模糊半径 阴影大小 阴影颜色
box-shadow:3px 3px 5px 2px;

box-shadow:inset 0px 0px 5px red;(内阴影)
           内阴影

box-shadow:3px 3px 5px 2px，inset 0px 0px 5px red; (多阴影，内外都有)

注：阴影不占空间

描绘轮廓：outline
不占空间，在border以外。
outline:[<outline-width>||<ouline-style>||<outline-color>]|inherit
outline-width:<length>
outline-style:solid|dashed|dotted
outline-color:<color>|invert(相反色)
eg:
outline:5px dashed blue;

16、背景

背景图片可以设置多个url，会引入多个图片，先引入的在上层，后引入的在下层。
平铺：可以写两个值，第一个值是X轴平铺形式，第二个值是Y轴平铺形式。
如果引入的背景图片是两张，平铺的时候就可以把第一组值和第二组值用逗号隔开，形成分别对应两张图片的两组平铺值

背景是否随文字滚动：background-attachment
background-attachment:<attachment>[,<attachment>]*
<attachment> = scroll|fixed|local
eg:
background-attachment:local;

背景图定位：
当值是四个值的时候：
background-position:right 10px top 20px; (距右侧10PX，距上侧20PX)

线性渐变：linear-gradient()
background-image:linear-gradient([[<angle>| to <side-or-corner>],]?<color-stop>[,<color-stop>]+)

angle:角度
side-or-corner:线性方向
color-stop:颜色的断点

<side-or-corner> = [left|right]||[top|bottom]

<color-stop> = <color> [<percentage> | <length>]?

percentage:位置

eg:
background-image:linear-gradient(red,blue);
background-image:linear-gradient(to top,red,blue);
background-image:linear-gradient(to right bottom,red,blue);
background-image:linear-gradient(0deg,red,blue);
background-image:linear-gradient(red,green,blue);
background-image:linear-gradient(red,green 20%,blue);

径向渐变：radial-gradient()

eg:
background-image:radial-gradient(closest-side,red,blue);
background-image:radial-gradient(circle,red,blue);
background-image:radial-gradient(circle 100px,red,blue);
background-image:radial-gradient(red,blue);
background-image:radial-gradient(100px 50px,red,blue);
background-image:radial-gradient(100px 50px at 0 0,red,blue);
background-image:radial-gradient(red,green 20%,blue);

重复线性/径向渐变：repeat-*-gradient
eg:
background-image:repeating-linear-gradient(red,blue 20px,red 40px);

background-image:repeating-radial-gradient(red,blue 20px,red 40px);

背景图片右下角位置：background-origin
background-origin:<box>[,<box>]*
<box>=border-box|padding-box|content-box
默认是padding-box
eg:
background-origin:border-box;

裁剪背景：background-clip（只要背景在某个区域出来，比如content-box内）
默认是border-box
eg:
background-clip:content-box;

背景大小：background-size
如果要设置成百分比的话，参照元素是父容器元素，如果父容器宽高比例与图片不同的话，图片有可能会变形。

背景属性缩写：
如果背景定位和背景大小缩写到一起，就用/隔开，前面的是定位，后面的是大小。
eg:
background:url(red.jpg) 0 0/20px 20px no-repeat,url(blue.jpg) 50% 50%/contain no-repeat content-box green;





































































圆角边框：border-radius
文字阴影：text-shadow
盒阴影：box-shadow

































  































































